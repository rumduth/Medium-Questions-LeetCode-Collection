class Solution:
    def removeDuplicateLetters(self, s: str) -> str:
        counter = Counter(s)
        stack = []
        seen = set()
        for c in s:
            counter[c] -= 1
            if c in seen:
                continue
            while stack and stack[-1] > c and counter[stack[-1]] > 0:
                seen.remove(stack.pop())
            stack.append(c)
            seen.add(c)
            
            
        return ''.join(stack)


class Solution:
    def removeDuplicateLetters(self, s: str) -> str:
        lastIndex = {}
        for index, char in enumerate(s):
            lastIndex[char] = index
        seen = set()
        stack = []
        for i, c in enumerate(s):
            if c in seen:
                continue
            while stack and c <= stack[-1] and lastIndex[stack[-1]] >= i:
                seen.remove(stack.pop())
            stack.append(c)
            seen.add(c)
        return ''.join(stack)
