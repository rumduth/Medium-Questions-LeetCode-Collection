"""
The knows API is already defined for you.
@param a, person a
@param b, person b
@return a boolean, whether a knows b
you can call Celebrity.knows(a, b)
"""


class Solution:
    # @param {int} n a party with n people
    # @return {int} the celebrity's label or -1
    def findCelebrity(self, n):
        # Write your code here
        outDegree = [0] * n
        inDegree = [0] * n
        for i in range(n):
            for j in range(i + 1, n):
                if Celebrity.knows(i,j):
                    outDegree[i] += 1
                    inDegree[j] += 1
                if Celebrity.knows(j,i):
                    outDegree[j] += 1
                    inDegree[i] += 1
        
        for i in range(n):
            if outDegree[i] == 0 and inDegree[i] == n-1:
                return i
        return -1


"""
The knows API is already defined for you.
@param a, person a
@param b, person b
@return a boolean, whether a knows b
you can call Celebrity.knows(a, b)
"""


class Solution:
    # @param {int} n a party with n people
    # @return {int} the celebrity's label or -1
    def findCelebrity(self, n):
        # Write your code here
        candidate = 0
        for i in range(1,n):
            if Celebrity.knows(candidate,i):
                candidate = i
        
        for i in range(n):
            if i != candidate:
                if Celebrity.knows(candidate, i) or not Celebrity.knows(i,candidate):
                    return -1
        return candidate
