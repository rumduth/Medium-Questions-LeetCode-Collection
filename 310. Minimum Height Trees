class Solution:
    def findMinHeightTrees(self, n: int, edges: List[List[int]]) -> List[int]:
        if n == 1:
            return [0]
        graph = defaultdict(list)
        numEdges = [0] * n
        for u, v in edges:
            graph[u].append(v)
            graph[v].append(u)
            numEdges[u] += 1
            numEdges[v] += 1
        queue = deque([i for i in range(n) if numEdges[i] == 1])
        remainingNodes = n
        while remainingNodes > 2:
            remainingNodes -= len(queue)
            for _ in range(len(queue)):
                leaf = queue.popleft()
                for neighbor in graph[leaf]:
                    numEdges[neighbor] -= 1
                    if numEdges[neighbor] == 1:
                        queue.append(neighbor)
        return list(queue)
