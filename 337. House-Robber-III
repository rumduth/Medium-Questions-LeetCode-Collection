# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rob(self, root: Optional[TreeNode]) -> int:
        cache = {}
        def helper(root):

            if root is None:
                return 0
            if root in cache:
                return cache[root]

            a = root.val
            if root.left:
                a += helper(root.left.left) + helper(root.left.right) 
            if root.right:
                a += helper(root.right.left) + helper(root.right.right)
            b = helper(root.left) + helper(root.right)
        
            cache[root] = max(a,b)
            
            return max(a,b)
    
        return helper(root)

