# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def bstFromPreorder(self, preorder: List[int]) -> Optional[TreeNode]:
        def helper(left, right):
            if left > right:
                return None
            if left == right:
                return TreeNode(preorder[left])
            
            root = TreeNode(preorder[left])
            for i in range(left + 1, right + 1):
                if preorder[i] > root.val:
                    root.left = helper(left+1,i-1)
                    root.right = helper(i, right)
                    return root
            root.left = helper(left+1,right)
            root.right = None
            return root;
        n = len(preorder)
        return helper(0,n-1)
