# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        oddHead = head
        oddTail = head
        evenHead = head.next
        evenTail = head.next
        head = head.next.next
        turn = True
        while head:
            if turn:
                oddTail.next = head
                oddTail = head
            else:
                evenTail.next = head
                evenTail = head
            turn = not turn
            head = head.next
        oddTail.next = evenHead
        evenTail.next = None
        return oddHead
