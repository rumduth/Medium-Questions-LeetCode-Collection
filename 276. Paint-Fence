class Solution:
    """
    @param n: non-negative integer, n posts
    @param k: non-negative integer, k colors
    @return: an integer, the total number of ways
    """
    def num_ways(self, n: int, k: int) -> int:
        if n == 0 or k == 0:
            return 0
        if n == 1:
            return k
        
        same = [0] * (n + 1)
        diff = [0] * (n + 1)
        same[1] = k
        diff[1] = k
        same[2] = k
        diff[2] = k * (k-1)
        for i in range(3, n+1):
            same[i] = diff[i-1]
            diff[i] = (same[i-1] + diff[i-1]) * (k-1)

        return same[n] + diff[n]

class Solution:
    """
    @param n: non-negative integer, n posts
    @param k: non-negative integer, k colors
    @return: an integer, the total number of ways
    """
    def num_ways(self, n: int, k: int) -> int:
        if n == 0 or k == 0:
            return 0
        if n == 1:
            return k

        same = [0] * (n + 1)
        diff = [0] * (n + 1)
        same[2] = k
        diff[2] = k * (k - 1)
        for i in range(3, n+1):
            same[i] = diff[i-1]
            diff[i] = (same[i-1] + diff[i-1]) * (k-1)
        return same[n] + diff[n]
        
       



