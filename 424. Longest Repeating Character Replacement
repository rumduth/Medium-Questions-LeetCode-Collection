class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        frequency = Counter()
        left = 0
        res = 0
        for right, c in enumerate(s):
            frequency[c] += 1
            max_freq = max(freq for _, freq in frequency.items())
            while right - left + 1 - max_freq > k:
                frequency[s[left]] -= 1
                max_freq = max(freq for _, freq in frequency.items())
                left += 1
            res = max(res, right - left + 1) 
           
        return res



class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        frequency = Counter()
        left = 0
        max_freq = 0
        res = 0
        for right, c in enumerate(s):
            frequency[c] += 1
            max_freq = max(max_freq,frequency[c])
            while right - left + 1 - max_freq > k:
                frequency[s[left]] -= 1
                left += 1
            res = max(res, right - left + 1)
           
        return res
