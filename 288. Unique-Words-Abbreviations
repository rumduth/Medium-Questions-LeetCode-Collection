
class ValidWordAbbr:
    """
    @param: dictionary: a list of words
    """
    def __init__(self, dictionary):
        # do intialization if necessary
        self.hash_map = {}
        for word in dictionary:
            key = self._get_word_abbr(word)
            if key not in self.hash_map:
                self.hash_map[key] = set()
            self.hash_map[key].add(word)

    def _get_word_abbr(self,word):
        if len(word) <= 2:
            return word
        return word[0]+ str(len(word)-2) +word[-1]
    """
    @param: word: a string
    @return: true if its abbreviation is unique or false
    """
    def isUnique(self, word):
        # write your code here
        key = self._get_word_abbr(word)
        if key not in self.hash_map:
            return True 
        if len(self.hash_map[key]) == 1 and word in self.hash_map[key]:
            return True;
        return False 

# Your ValidWordAbbr object will be instantiated and called as such:
# obj = ValidWordAbbr(dictionary)
# param = obj.isUnique(word)
